/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CreatorCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorCore__factory>;
    getContractFactory(
      name: "ERC1155CreatorCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155CreatorCore__factory>;
    getContractFactory(
      name: "ICreatorCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreatorCore__factory>;
    getContractFactory(
      name: "IERC1155CreatorCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155CreatorCore__factory>;
    getContractFactory(
      name: "ERC1155Creator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Creator__factory>;
    getContractFactory(
      name: "IERC1155CreatorExtensionApproveTransfer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155CreatorExtensionApproveTransfer__factory>;
    getContractFactory(
      name: "IERC1155CreatorExtensionBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155CreatorExtensionBurnable__factory>;
    getContractFactory(
      name: "ICreatorExtensionTokenURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICreatorExtensionTokenURI__factory>;
    getContractFactory(
      name: "IERC1155CreatorMintPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155CreatorMintPermissions__factory>;
    getContractFactory(
      name: "AdminControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminControl__factory>;
    getContractFactory(
      name: "IAdminControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAdminControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Geocache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Geocache__factory>;
    getContractFactory(
      name: "Geocache1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Geocache1155__factory>;

    getContractAt(
      name: "CreatorCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CreatorCore>;
    getContractAt(
      name: "ERC1155CreatorCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155CreatorCore>;
    getContractAt(
      name: "ICreatorCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreatorCore>;
    getContractAt(
      name: "IERC1155CreatorCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155CreatorCore>;
    getContractAt(
      name: "ERC1155Creator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Creator>;
    getContractAt(
      name: "IERC1155CreatorExtensionApproveTransfer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155CreatorExtensionApproveTransfer>;
    getContractAt(
      name: "IERC1155CreatorExtensionBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155CreatorExtensionBurnable>;
    getContractAt(
      name: "ICreatorExtensionTokenURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICreatorExtensionTokenURI>;
    getContractAt(
      name: "IERC1155CreatorMintPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155CreatorMintPermissions>;
    getContractAt(
      name: "AdminControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminControl>;
    getContractAt(
      name: "IAdminControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAdminControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Geocache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Geocache>;
    getContractAt(
      name: "Geocache1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Geocache1155>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
